{"version":3,"sources":["webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/lib/waffle-iron sync","webpack:///./src/lib/waffle-iron/waffle_iron.js","webpack:///./src/lib/waffle-iron/waffle_iron_bg.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,gE;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;;;;;;;;;;;;;ACA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;;AAE9C;;AAEA,mDAAmD,+BAA+B;;AAElF;;AAEA;AACA;AACA,yEAAyE,2DAAW;AACpF,8CAA8C,2DAAW;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA,UAAU,4BAA4B;AACtC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6DAAa;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,UAAU,yBAAyB;AACnC,YAAY;AACZ;AACO;AACP,yCAAyC,sEAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAU;AACxB;AACA;;AAEA;AACA;AACA,yEAAyE,2DAAW;AACpF,8CAA8C,2DAAW;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,2DAAW;AACtF,gDAAgD,2DAAW;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT,YAAY,yEAAyB;AACrC;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,+EAA+B;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,sFAAsC;AACxD;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,QAAQ,sFAAsC;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,yFAAyC;AAC3D;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,QAAQ,yFAAyC;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,uFAAuC;AACzD;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,QAAQ,uFAAuC;AAC/C;AACA;AACA;AACA;AACA,kBAAkB,wEAAwB;AAC1C;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,+EAA+B;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,wEAAwB;AACnD,YAAY,wEAAwB;AACpC,YAAY,2EAA2B;AACvC;AACA;AACA;AACA,YAAY,oEAAoB;AAChC;AACA,SAAS;AACT,YAAY,wEAAwB;AACpC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,wEAAwB;AACnD,YAAY,wEAAwB;AACpC,YAAY,6EAA6B;AACzC;AACA;AACA;AACA,YAAY,oEAAoB;AAChC;AACA,SAAS;AACT,YAAY,wEAAwB;AACpC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iFAAiC;AACnD;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,8EAA8B;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iFAAiC;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,4EAA4B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,wEAAwB;AACnD,YAAY,wEAAwB;AACpC,YAAY,4EAA4B;AACxC;AACA;AACA;AACA,YAAY,oEAAoB;AAChC;AACA,SAAS;AACT,YAAY,wEAAwB;AACpC;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,4EAA4B;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iFAAiC;AACnD;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,QAAQ,iFAAiC;AACzC;AACA;AACA;AACA;AACA,kBAAkB,qEAAqB;AACvC;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,4EAA4B;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iFAAiC;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,4EAA4B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,wEAAwB;AACnD,YAAY,wEAAwB;AACpC,YAAY,wEAAwB;AACpC;AACA;AACA;AACA,YAAY,oEAAoB;AAChC;AACA,SAAS;AACT,YAAY,wEAAwB;AACpC;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,CAAC;;AAEM;AACP,cAAc,4DAAQ,8BAA8B,CAAC;AACrD;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA","file":"0.bundle.worker.js","sourcesContent":["module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src/lib/waffle-iron sync recursive\";","import * as wasm from \"./waffle_iron_bg.wasm\";\nexport * from \"./waffle_iron_bg.js\";","import * as wasm from './waffle_iron_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {GeneratorConfig | undefined} config\n* @returns {GeneratorOutput}\n*/\nexport function generate(config) {\n    let ptr0 = 0;\n    if (!isLikeNone(config)) {\n        _assertClass(config, GeneratorConfig);\n        ptr0 = config.ptr;\n        config.ptr = 0;\n    }\n    var ret = wasm.generate(ptr0);\n    return GeneratorOutput.__wrap(ret);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} puzzle\n* @param {SolverConfig | undefined} config\n* @returns {SolverOutput}\n*/\nexport function solve(puzzle, config) {\n    var ptr0 = passArray8ToWasm0(puzzle, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    let ptr1 = 0;\n    if (!isLikeNone(config)) {\n        _assertClass(config, SolverConfig);\n        ptr1 = config.ptr;\n        config.ptr = 0;\n    }\n    var ret = wasm.solve(ptr0, len0, ptr1);\n    return SolverOutput.__wrap(ret);\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n/**\n*/\nexport class GeneratorConfig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(GeneratorConfig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_generatorconfig_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get samples() {\n        var ret = wasm.__wbg_get_generatorconfig_samples(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set samples(arg0) {\n        wasm.__wbg_set_generatorconfig_samples(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get iterations() {\n        var ret = wasm.__wbg_get_generatorconfig_iterations(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set iterations(arg0) {\n        wasm.__wbg_set_generatorconfig_iterations(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get removals() {\n        var ret = wasm.__wbg_get_generatorconfig_removals(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set removals(arg0) {\n        wasm.__wbg_set_generatorconfig_removals(this.ptr, arg0);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.generatorconfig_new();\n        return GeneratorConfig.__wrap(ret);\n    }\n}\n/**\n*/\nexport class GeneratorOutput {\n\n    static __wrap(ptr) {\n        const obj = Object.create(GeneratorOutput.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_generatoroutput_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get puzzle() {\n        try {\n            const retptr = wasm.__wbindgen_export_1.value - 16;\n            wasm.__wbindgen_export_1.value = retptr;\n            wasm.generatoroutput_puzzle(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_1.value += 16;\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get solution() {\n        try {\n            const retptr = wasm.__wbindgen_export_1.value - 16;\n            wasm.__wbindgen_export_1.value = retptr;\n            wasm.generatoroutput_solution(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_1.value += 16;\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    get difficulty() {\n        var ret = wasm.__wbg_get_solverconfig_limit(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class SolutionRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SolutionRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_solutionrecord_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get iteration() {\n        var ret = wasm.__wbg_get_solverconfig_limit(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get branches() {\n        var ret = wasm.solutionrecord_branches(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get solution() {\n        try {\n            const retptr = wasm.__wbindgen_export_1.value - 16;\n            wasm.__wbindgen_export_1.value = retptr;\n            wasm.solutionrecord_solution(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_1.value += 16;\n        }\n    }\n}\n/**\n*/\nexport class SolverConfig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SolverConfig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_solverconfig_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get limit() {\n        var ret = wasm.__wbg_get_solverconfig_limit(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set limit(arg0) {\n        wasm.__wbg_set_solverconfig_limit(this.ptr, arg0);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.solverconfig_new();\n        return SolverConfig.__wrap(ret);\n    }\n}\n/**\n*/\nexport class SolverOutput {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SolverOutput.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_solveroutput_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get steps() {\n        var ret = wasm.__wbg_get_solverconfig_limit(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get iterations() {\n        var ret = wasm.solutionrecord_branches(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {any[]}\n    */\n    get result() {\n        try {\n            const retptr = wasm.__wbindgen_export_1.value - 16;\n            wasm.__wbindgen_export_1.value = retptr;\n            wasm.solveroutput_result(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_1.value += 16;\n        }\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_solutionrecord_new = function(arg0) {\n    var ret = SolutionRecord.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_getRandomValues_f5e14ab7ac8e995d = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_randomFillSync_d5bd2d655fdf256a = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_self_1b7a39e3a92c949c = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_require_604837428532a733 = function(arg0, arg1) {\n    var ret = require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_crypto_968f1772287e2df0 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_getRandomValues_a3d34b4fee3c2869 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n"],"sourceRoot":""}